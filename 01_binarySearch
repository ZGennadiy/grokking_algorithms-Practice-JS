const binarySearch = (list, item) => {
  let low = 0;
  let high = list.length - 1;

  while(low <= high) {
    const mid = Math.floor((low + high) / 2);
    const guess = list[mid];

    if (guess === item) {
      return mid;
    }
    if (guess > item) {
      high = mid - 1;
    }
    else low = mid + 1;
  }
  return null
};

const myList = [1, 3, 5, 7, 9];

console.log(binarySearch(myList, 3)); // 1
console.log(binarySearch(myList, 6)); // null

const recursionBinarySearch = ( list, item, low = 0, high = list.length - 1 ) => {
    let mid = Math.floor((low + high) / 2);
    let guess = list[mid];

    if ( low > high ) return null;

    if (guess === item) {
      return mid;
    }

    if (guess > item) {
      high = mid - 1;
      return recursionBinarySearch(list, item, low, high);
    }
    
    low = mid + 1;
    return recursionBinarySearch(list, item, low, high);
};

const newList = [1, 2, 5, 6, 11, ];

console.log(recursionBinarySearch(newList, 3)); // null
console.log(recursionBinarySearch(newList, 6)); // 3
